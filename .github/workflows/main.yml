name: Release

on:
  issue_comment:
    types: [ created ]

jobs:
  build_and_release:
    name: Build and release
    runs-on: ubuntu-latest
    container: devkitpro/devkita64:latest
    if: contains(github.event.comment.body, '/release-action')

    steps:
      - name: Update system packages
        run: |
          sudo -n apt-get update && sudo -n apt-get install -y \
            build-essential zip python3 python3-pip python3-lz4 \
            git wget cmake  # 新增编译工具
        shell: bash

      - name: Install devkitPro packages
        run: |
          sudo dkp-pacman --noconfirm -Syu  # 先更新包数据库
          sudo dkp-pacman --noconfirm -S \
            devkitA64 libnx switch-tools \
            switch-curl switch-bzip2 switch-freetype \
            switch-libjpeg-turbo switch-libwebp switch-sdl2 \
            switch-sdl2_gfx switch-sdl2_image switch-sdl2_ttf \
            switch-zlib switch-libpng switch-mesa general-tools \
            switch-portlibs switch-harfbuzz
          
          # 检查switch-freetype包是否包含freetype-config
          echo "Checking switch-freetype package contents..."
          dkp-pacman -Ql switch-freetype | grep -i "freetype-config" || echo "switch-freetype has no freetype-config"
        shell: bash

      - name: Manually build FreeType (to get freetype-config)
        run: |
          # 如果官方包没有freetype-config，手动编译安装
          export DEVKITPRO=/opt/devkitpro
          export DEVKITA64=$DEVKITPRO/devkitA64
          export PORTLIBS=$DEVKITPRO/portlibs/switch
          
          # 创建工作目录
          mkdir -p freetype-build && cd freetype-build
          
          # 下载FreeType源码（使用与switch-freetype匹配的版本，这里以2.13.3为例）
          wget https://download.savannah.gnu.org/releases/freetype/freetype-2.13.3.tar.xz
          tar -xf freetype-2.13.3.tar.xz && cd freetype-2.13.3
          
          # 配置编译（针对Switch平台）
          ./configure \
            --prefix=$PORTLIBS \
            --host=aarch64-none-elf \
            --with-png=yes \
            --with-harfbuzz=yes \
            --enable-shared=no \
            --enable-static=yes
          
          # 编译并安装（会生成freetype-config）
          make -j$(nproc)
          make install
          
          # 验证freetype-config是否安装成功
          ls -la $PORTLIBS/bin/freetype-config
          $PORTLIBS/bin/freetype-config --version
        shell: bash

      - name: Update latest libnx
        run: |
          git config --global --add safe.directory "*"
          git clone --recurse-submodules https://github.com/zdm65477730/libnx.git
          cd libnx
          make install -j$(nproc)
        shell: bash

      - name: Checkout latest code
        uses: actions/checkout@v4.1.1
        with:
          ref: master
          clean: true
          fetch-depth: 0
          fetch-tags: true
          submodules: recursive

      - name: Setup ENV parameters
        run: |
          VER_FILE=Makefile
          VERSION=$(awk '/^APP_VERSION/{print $3}' $VER_FILE)
          echo "TAG=${VERSION}" >> "${GITHUB_ENV}"
          echo "RELEASE_NAME=EdiZon ${VERSION}" >> "${GITHUB_ENV}"
          echo "PORTLIBS=/opt/devkitpro/portlibs/switch" >> "${GITHUB_ENV}"
          echo "PATH=$PATH:$PORTLIBS/bin" >> "${GITHUB_ENV}"  # 确保freetype-config在PATH中
        shell: bash

      - name: Build
        run: |
          export DEVKITPRO=/opt/devkitpro
          export DEVKITA64=$DEVKITPRO/devkitA64
          export PATH=$PATH:$PORTLIBS/bin
          
          # 显式使用手动安装的freetype-config
          echo "Freetype CFLAGS: $($PORTLIBS/bin/freetype-config --cflags)"
          echo "Freetype LIBS: $($PORTLIBS/bin/freetype-config --libs)"
          
          make all
        shell: bash

      - name: Upload Release Asset
        uses: softprops/action-gh-release@v2.0.9
        with:
          name: ${{ env.RELEASE_NAME }}
          tag_name: ${{ env.TAG }}
          draft: false
          prerelease: false
          generate_release_notes: yes
          make_latest: true
          files: |
            ./SdOut/EdiZon.zip
